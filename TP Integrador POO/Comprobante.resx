<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RAREQEREBERAREQEREBERAREQEREBERAREQP/9k=
</value>
  </data>
</root>