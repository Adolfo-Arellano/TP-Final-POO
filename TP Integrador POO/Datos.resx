<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>